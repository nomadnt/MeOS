#!/bin/sh
# Copyright (C) 2009-2014 nomadnt.com

[ $DEBUG ] || . /lib/meos.sh

config_cb(){
	local _type="$1"
	local _cfg="$2"
	
	echo $_cfg | grep -qs "^msh[0-9]$" && {
		config_get mtu $_cfg mtu 1532
		config_get mesh $_cfg mesh "$MSH_DEV"
		
		uci_set network $_cfg proto "batadv"
		uci_set network $_cfg mesh "$mesh"
		uci_set network $_cfg mtu $mtu
	}
}

config_networks(){
	unset _WAN _LAN _MSH
	local _WAN _LAN _MSH
	local ifname
	
	append _WAN "$(meos_default_wan)"
	for ifname in $(ls /sys/class/net/ | grep eth); do
		[ "$ifname" == $_WAN ] || append _LAN $ifname
	done
	append _MSH "bat0"
	
	uci_set network mesh type "bridge"
	uci_set network mesh ifname "$_MSH"

	case "$(sys_role)" in
		G)
			uci_set network mesh proto "static"
			uci_set network mesh ipaddr "$(mac2ip4addr 10 $_PHY_MAC 1)"
			uci_set network mesh netmask "255.0.0.0"
			uci_remove network mesh gateway
				
			uci_set network wan ifname "$_WAN"
			uci_set network wan proto "dhcp"
			uci_set network wan peerdns 0
			uci_set network wan dns "208.67.222.222 208.67.220.220"
			uci_remove network wan ipaddr
			uci_remove network wan netmask
			uci_remove network wan gateway
			;;
		B)
			uci_set network mesh proto "dhcp"
			uci_remove network mesh ipaddr
			uci_remove network mesh netmask
			uci_remove network mesh gateway
			
			uci_set network wan proto 'none'
			uci_remove network wan ifname
			uci_remove network wan ipaddr
			uci_remove network wan netmask
			uci_remove network wan gateway
			uci_remove network wan peerdns
			uci_remove network wan dns
			
			append _LAN "$_WAN"
			;;
	esac
	
	uci_set network console ifname "br-mesh"
	uci_set network console proto "static"
	uci_set network console ipaddr "$(mac2ip4addr 10 $_PHY_MAC)"
	uci_set network console netmask "255.0.0.0"
	
	uci_set network lan type "bridge"
	uci_set network lan ifname "$_LAN"
	uci_set network lan proto "static"
	uci_set network lan ipaddr "192.168.0.1"
	uci_set network lan netmask "255.255.255.0"
	uci_remove network lan gateway
	uci_remove network lan peerdns
	uci_remove network lan dns
}

config_reorder(){
    local INDEX=0
    for net in loopback wan wan6 mesh lan console; do
        uci_reorder network $net $((INDEX++))
    done
}

[ "$(uci_get system @system[0] role A)" = "A" ] && {
	local _PHY_DEVICES="$(iw_get_devices)"
	local _PHY_MAC="$(net_get_macaddr $(echo $_PHY_DEVICES | awk '{print $1}'))"

	# Creaing default network section if not exists
	for net in wan mesh lan console; do
		uci_get network $net > /dev/null || uci_add network interface $net
	done

	for phy in $_PHY_DEVICES; do
		uci_get network ${phy//phy/msh} > /dev/null || uci_add network interface ${phy//phy/msh}
	done

	# Start network configuration
	config_load network
	config_networks
	config_reorder

	uci_commit network
}